/* 
 * SQLite Exporter GUI
 *
 * Copyright 2011 Wappworks Studios
 */

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.prefs.Preferences;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileNameExtensionFilter;


public refines class SqliteExporterFrame
{
	private PanelFileSelection 	xmlFileOutSelection;
	private static final FileNameExtensionFilter fileFilterXml = new FileNameExtensionFilter(
			"XML (xml, txt)", "xml", "txt");
	private static final String PREF_FILEPATH_XML = "filepath_xml";
	
	private void setupButtons()
	{	
		Super().setupButtons();
		
		xmlFileOutSelection = new PanelFileSelection( "Output XML...", fileFilterXml, false );
		xmlFileOutSelection.addChangeListener( this );
		xmlFileOutSelection.setLogWriter( logWriter );
		topPanel.add( xmlFileOutSelection );

		window.add( topPanel, BorderLayout.PAGE_START );
	}
		
	private void restorePrefs()
	{
		Super().restorePrefs();
		
		xmlFileOutSelection.setLastSelectedFile( prefs.get(PREF_FILEPATH_XML, "") );
	}
	
	public void stateChanged(ChangeEvent evt)
	{
		Super(ChangeEvent).stateChanged(evt);
		
		if( evt.getSource() == xmlFileOutSelection )
		{
			addLogText( String.format("Selected XML export target as '%1$s'", xmlFileOutSelection.getLastSelectedFilePath()) );
			prefs.put( PREF_FILEPATH_XML, xmlFileOutSelection.getLastSelectedFilePath() );
			return;
		}
	}
	
	public void handleExportGui()
	{
		Super().handleExportGui();

		// Set up the common export configuration
		SqliteConverterExportConfig commonConfig = new SqliteConverterExportConfig();
		JSONObject exportConfig = getExportConfig();
		if( exportConfig != null )
		{
			JSONObject jsonConfigCommon = exportConfig.optJSONObject( "common" );
			if( jsonConfigCommon != null )
				commonConfig.add( jsonConfigCommon );
		}
		
		
		File xmlFileOut = xmlFileOutSelection.getLastSelectedFile();
		if( xmlFileOut != null )
		{
			SqliteConverterExportConfig currConfig = commonConfig;
			if( exportConfig != null )
			{
				JSONObject jsonConfigCurr = exportConfig.optJSONObject( "xml" );
				if( jsonConfigCurr != null )
				{
					currConfig = new SqliteConverterExportConfig( commonConfig );
					currConfig.add( jsonConfigCurr );
				}
			}
			export( xmlFileOut, SqliteConverter.XML, currConfig );
		}
		
	}	
}
